# Automatically generated by Pynguin.
import unittest
import tracer as module0

class test(unittest.TestCase):
    def test_isstatic(self):
        inst1 = module0.Tracer()
        assert inst1 is not None
        inst2 = module0.Tracer()
        assert inst2 is not None
        inst1.add_function_exclusion("test")
        assert inst2.function_excluded("test")==True, "Tracer Object should be static (functionexclusions)"
        inst1.add(show_trace1)
        assert inst2.functions[0] is inst1.functions[0], "Tracer Object should be static (functions)"
        inst1.add_module_exclusion("test")
        assert inst2.module_excluded("test"), "Tracer Object should be static (moduleexclusions)"
        inst1.add_event_filter(show_trace1,"call")
        assert inst2.event_filter(show_trace1,"call"), "Tracer Object should be static (filters)"

    def test_case_0(self):
        var0 = module0.TracerClass()
        assert var0 is not None
        var1 = '9'
        var2 = var0.stop()
        assert var2 is None
        var3 = module0.Tracer()
        assert var3 is not None
        var4 = var3.delete(var1)
        assert var4 is None
        var5 = var0.start()
        assert var5 is None
        var6 = [var2]
        var7 = var3.delete(var6)
        assert var7 is None


    def test_case_1(self):
        var0 = module0.TracerClass()
        assert var0 is not None
        var1 = var0.stop()
        assert var1 is None
        var2 = module0.TracerClass()
        assert var2 is not None
        var3 = 'sLS#_\x0bW_Q0Bt*pd'
        var4 = module0.Tracer()
        assert var4 is not None
        var5 = var4.delete_function_exclusion(var3)
        assert var5 is None
        var6 = 'J?\\iN'
        var7 = b''
        var8 = {var2}
        var9 = var2.trace(var6, var7, var8)
        assert var9 is None
        var10 = module0.TracerClass()
        assert var10 is not None
        var11 = {}
        var12 = ',KBmn_4P'
        var13 = var0.trace(var10, var11, var12)
        assert var13 is None
        var14 = var2.start()
        assert var14 is None
        var15 = var2.start()
        assert var15 is None
        var16 = 'k~^$'
        var17 = var4.add_function_exclusion(var16)
        assert var17 is None
#dependencies
def show_trace1(frame, event, arg):
      code = frame.f_code
      offset = frame.f_lasti


      print(f"Trace1 | {code.co_name}\n", end=' ')
      return show_trace1
